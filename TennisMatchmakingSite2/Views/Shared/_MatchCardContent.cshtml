@model TennisMatchmakingSite2.Models.MatchData
@{
    var isPersonal = ViewBag.IsPersonal ?? false;
    var currentUserId = ViewBag.CurrentUserId;
    var isMatchCreator = currentUserId == Model.CreatorId;
}

<!-- Participants Section -->
@if (Model.Participants != null && Model.Participants.Count > 0)
{
<div class="p-4 border-b border-gray-100">
    <h4 class="font-medium text-gray-800 mb-2">Participants (@Model.Participants.Count)</h4>
    <div class="space-y-2">
        @foreach (var participantId in Model.Participants)
        {
            var isCurrentUser = participantId == currentUserId;
            var isHost = participantId == Model.CreatorId;
        <div class="flex items-center justify-between bg-gray-50 p-2 rounded-md">
            <div class="flex items-center">
                <span class="font-medium @(isCurrentUser ? "text-blue-600" : "")">
                    @if (isCurrentUser)
                    {
                    @(isHost ? "You (Host)" : "You")
                    }
                    else
                    {
                        // For host, use PosterName, for others use details from ParticipantDetails
                        string participantName = "Player";
                        if (isHost && !string.IsNullOrEmpty(Model.PosterName)) {
                            participantName = Model.PosterName;
                        } else if (Model.ParticipantDetails != null) {
                            var details = Model.ParticipantDetails.FirstOrDefault(p => p.Id == participantId);
                            if (details != null && !string.IsNullOrEmpty(details.Name)) {
                                participantName = details.Name;
                            }
                        }
                    @(isHost ? $"{participantName} (Host)" : participantName)
                    }
                </span>
            </div>
            @if (!isCurrentUser)
            {
            <div class="flex items-center space-x-3">
                <button onclick="viewProfile('@participantId'); event.stopPropagation();"
                        class="text-purple-600 hover:text-purple-800 profile-icon" title="View Profile">
                    <i class="fas fa-user-circle"></i>
                </button>
                <button onclick="messageUser('@participantId', '@(isHost ? Model.PosterName : "Player")'); event.stopPropagation();"
                        class="text-blue-600 hover:text-blue-800 profile-icon" title="Message">
                    <i class="fas fa-comment"></i>
                </button>
            </div>
            }
        </div>
        }
    </div>
</div>
}

@if (isPersonal)
{
    <!-- Show match requests if any -->
@if (Model.RequestedBy != null && Model.RequestedBy.Count > 0)
    {
<div class="p-4 border-b border-gray-100">
    <h4 class="font-medium text-gray-800 mb-2">Match Requests (@Model.RequestedBy.Count)</h4>
    <div id="requests-@Model.Id" class="space-y-3">
        <div class="text-center text-sm text-gray-500">
            <i class="fas fa-spinner fa-spin mr-1"></i> Loading requests...
        </div>
    </div>
</div>
    }

 <!-- Show management buttons only for the match creator -->
@if (isMatchCreator)
    {
<div class="p-4">
    <div class="button-area justify-end">
        <form asp-controller="Match" asp-action="Delete" method="post" class="inline" onsubmit="return confirm('Are you sure you want to delete this match?')">
            <input type="hidden" name="matchId" value="@Model.Id" />
            <button type="submit" onclick="event.stopPropagation();"
                    class="inline-flex items-center px-3 py-2 text-sm font-medium text-red-700 bg-red-50 rounded-md hover:bg-red-100">
                <i class="fas fa-trash-alt mr-2"></i>Delete
            </button>
        </form>
        <button onclick="editMatch('@Model.Id'); event.stopPropagation();"
                class="inline-flex items-center px-3 py-2 text-sm font-medium text-blue-700 bg-blue-50 rounded-md hover:bg-blue-100">
            <i class="fas fa-edit mr-2"></i>Edit
        </button>
    </div>
</div>
    }
}
else
{
<div class="p-4">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
        <div class="flex items-center">
            <p class="text-gray-700">
                <span class="font-medium">Posted by:</span> @Model.PosterName
            </p>
        </div>
        <div class="button-area justify-center sm:justify-end">
            @* Show appropriate button based on match and user state *@
            @if (Model.CreatorId != currentUserId)
            {
            @if (Model.IsFull || Model.Status?.ToLower() != "open")
                {
            <button class="inline-flex items-center justify-center px-3 py-2 text-sm font-medium text-gray-700 bg-gray-50 rounded-md cursor-not-allowed">
                <i class="fas fa-times-circle mr-2"></i>Full
            </button>
                }
                else if (Model.RequestedBy != null && Model.RequestedBy.Contains(currentUserId))
                {
            <button class="inline-flex items-center justify-center px-3 py-2 text-sm font-medium text-yellow-700 bg-yellow-50 rounded-md cursor-not-allowed">
                <i class="fas fa-clock mr-2"></i>Pending
            </button>
                }
                else if (Model.Participants != null && Model.Participants.Contains(currentUserId))
                {
            <button class="inline-flex items-center justify-center px-3 py-2 text-sm font-medium text-blue-700 bg-blue-50 rounded-md cursor-not-allowed">
                <i class="fas fa-check mr-2"></i>Joined
            </button>
                }
                else
                {
            <button onclick="requestMatch('@Model.Id'); event.stopPropagation();"
                    class="inline-flex items-center justify-center px-3 py-2 text-sm font-medium text-green-700 bg-green-50 rounded-md hover:bg-green-100">
                <i class="fas fa-calendar-plus mr-2"></i>Request
            </button>
                }
            }
        </div>
    </div>
</div>
}